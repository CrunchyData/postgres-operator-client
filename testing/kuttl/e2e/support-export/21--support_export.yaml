---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
commands:
- script: kubectl-pgo --namespace $NAMESPACE support export kuttl-support-cluster -o .
- script: tar -xzf ./crunchy_k8s_support_export_*.tar.gz
- script: |
    CLEANUP="rm -r ./kuttl-support-cluster ./crunchy_k8s_support_export_*.tar.gz"

    # LimitRange directory and list file path
    LR_DIR="./kuttl-support-cluster/limitranges/"
    LR_LIST="${LR_DIR}list"

    # check for limitrange object name
    LRO=$(awk 'NR==2 {print $1}' "${LR_LIST}")
    [ "${LRO}" = 'kuttl-test-limitrange' ] || {
      echo "Expected 'kuttl-test-limitrange' limitrange, got:"
      echo "${LRO}"
      eval "$CLEANUP"
      exit 1
    }

    # check for a .yaml file for the limitrange object
    LR_FILE="${LR_DIR}kuttl-test-limitrange.yaml"
    if [ ! -f ${LR_FILE} ]
    then
      echo "Expected directory with file, ${LR_FILE}, got:"
      ls ${LR_DIR}
      eval "$CLEANUP"
      exit 1
    fi

    # Ingress directory and list file path
    I_DIR="./kuttl-support-cluster/ingresses/"
    I_LIST="${I_DIR}list"

    # check for ingress object name
    IO=$(awk 'NR==2 {print $1}' ${I_LIST})
    [ "${IO}" = 'kuttl-test-ingress' ] || {
      echo "Expected 'kuttl-test-ingress' ingress, got:"
      echo "${IO}"
      eval "$CLEANUP"
      exit 1
    }

    # check for a .yaml file for the ingress object
    I_FILE="${I_DIR}kuttl-test-ingress.yaml"
    if [ ! -f ${I_FILE} ]
    then
      echo "Expected directory with file, ${I_FILE}, got:"
      ls ${I_DIR}
      eval "$CLEANUP"
      exit 1
    fi

- script: rm -r ./kuttl-support-cluster ./crunchy_k8s_support_export_*.tar.gz
